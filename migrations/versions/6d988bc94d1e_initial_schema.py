"""initial_schema

Revision ID: 6d988bc94d1e
Revises: 
Create Date: 2025-04-22 20:01:34.535581

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6d988bc94d1e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consensus',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'REVIEW', 'REACHED', 'FAILED', name='consensusstatus'), nullable=True),
    sa.Column('agreement_score', sa.Float(), nullable=True),
    sa.Column('validator_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('report_type', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'CUSTOM', name='reporttype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'GENERATING', 'COMPLETED', 'FAILED', name='reportstatus'), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('summary', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)
    op.create_table('qa_tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('validators',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('validations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('validator_id', sa.String(length=36), nullable=False),
    sa.Column('consensus_id', sa.String(length=36), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'VALIDATED', 'APPROVED', 'REJECTED', 'NEEDS_REVIEW', 'REVIEW', name='validationstatus'), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('validation_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['consensus_id'], ['consensus.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['qa_tasks.id'], ),
    sa.ForeignKeyConstraint(['validator_id'], ['validators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('golden_sets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('validation_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('task_metadata', sa.JSON(), nullable=True),
    sa.Column('expected_response', sa.JSON(), nullable=False),
    sa.Column('allowed_variation', sa.Float(), nullable=True),
    sa.Column('hints', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['validation_id'], ['validations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_golden_sets_category'), 'golden_sets', ['category'], unique=False)
    op.create_index(op.f('ix_golden_sets_id'), 'golden_sets', ['id'], unique=False)
    op.create_index(op.f('ix_golden_sets_task_id'), 'golden_sets', ['task_id'], unique=True)
    op.create_table('metrics',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('validation_id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('report_id', sa.String(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('f1_score', sa.Float(), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('custom_metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.ForeignKeyConstraint(['validation_id'], ['validations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metrics_task_id'), 'metrics', ['task_id'], unique=False)
    op.create_table('quality_metrics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('validation_id', sa.String(), nullable=False),
    sa.Column('metric_type', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('metric_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['validation_id'], ['validations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quality_metrics_id'), 'quality_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_quality_metrics_metric_type'), 'quality_metrics', ['metric_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quality_metrics_metric_type'), table_name='quality_metrics')
    op.drop_index(op.f('ix_quality_metrics_id'), table_name='quality_metrics')
    op.drop_table('quality_metrics')
    op.drop_index(op.f('ix_metrics_task_id'), table_name='metrics')
    op.drop_table('metrics')
    op.drop_index(op.f('ix_golden_sets_task_id'), table_name='golden_sets')
    op.drop_index(op.f('ix_golden_sets_id'), table_name='golden_sets')
    op.drop_index(op.f('ix_golden_sets_category'), table_name='golden_sets')
    op.drop_table('golden_sets')
    op.drop_table('validations')
    op.drop_table('validators')
    op.drop_table('qa_tasks')
    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_table('consensus')
    # ### end Alembic commands ###
